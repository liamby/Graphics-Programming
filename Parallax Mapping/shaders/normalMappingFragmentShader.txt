#version 330
out vec4 FragColor;

in vec3 fragPosTS;
in vec3 lightPosTS;
in vec3 viewPosTS;
in vec2 texCoords;
in vec3 normalIn;

uniform sampler2D diffuseMap;
uniform sampler2D normalMap;
uniform bool mappingOn = false;
void main()
{
  
  vec3 normal = normalize(texture(normalMap, texCoords).rgb * 2.0 - 1.0);

  vec3 color = texture(diffuseMap, texCoords).rgb;
	
  // ambient
  vec3 ambient = 0.7 * color;

  // diffuse
  vec3 lightDir = normalize(lightPosTS - fragPosTS);
  float diff = max(dot(lightDir, normal), 0.0);
  vec3 diffuse = diff * color;

  // specular
  vec3 viewDir = normalize(viewPosTS - fragPosTS);
  vec3 halfwayDir = normalize(lightDir + viewDir);
  float spec = pow(max(dot(normal, halfwayDir), 0.0), 32.0);
  vec3 specular = vec3(0.5) * spec;
	
 // combine
  FragColor = vec4(ambient + diffuse + specular, 1.0);
}